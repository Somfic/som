let assert = intrinsic fn(condition ~ bool) -> unit;

let two = fn 1 + 1;
let identity = fn(a ~ int) a;
let fib = fn(n ~ int) -> int n if n < 2 else fib(n - 1) + fib(n - 2);

assert(two() == 2);
assert(identity(1) == 1);
assert(identity(2) == 2);
assert(identity(2 + 2) == 4);
assert(fib(0) == 0);
assert(fib(1) == 1);
assert(fib(2) == 1);
assert(fib(3) == 2);
assert(fib(4) == 3);
assert(fib(5) == 5);
assert(fib(6) == 8);
assert(fib(7) == 13);
assert(fib(8) == 21);
assert(fib(9) == 34);
assert(fib(10) == 55);

